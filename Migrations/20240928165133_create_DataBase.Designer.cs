// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace APITEST.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240928165133_create_DataBase")]
    partial class create_DataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebApi.Entities.FAQTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("answer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("department")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("question")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("FAQTable");
                });

            modelBuilder.Entity("WebApi.Entities.GroupMessageTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("group_id")
                        .HasColumnType("int");

                    b.Property<int>("mainTableFKId")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("mainTableFKId");

                    b.ToTable("GroupMessageTable");
                });

            modelBuilder.Entity("WebApi.Entities.GroupsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("department")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("group_name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("GroupsTable");
                });

            modelBuilder.Entity("WebApi.Entities.MainTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("PasswordResetExpiration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("RefreshTokenExpiration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("MainTable");
                });

            modelBuilder.Entity("WebApi.Entities.PersonalChatsTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("answer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("department")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("facultyType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("mainTableFKId")
                        .HasColumnType("int");

                    b.Property<string>("question")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("mainTableFKId");

                    b.ToTable("PersonalChatsTable");
                });

            modelBuilder.Entity("WebApi.Entities.GroupMessageTable", b =>
                {
                    b.HasOne("WebApi.Entities.MainTable", "MainTable")
                        .WithMany("GroupMessageTable")
                        .HasForeignKey("mainTableFKId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.PersonalChatsTable", b =>
                {
                    b.HasOne("WebApi.Entities.MainTable", "MainTable")
                        .WithMany("PersonalChatsTable")
                        .HasForeignKey("mainTableFKId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
